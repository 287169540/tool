yum install

libmcrypt libxml2-static libxml2 libxml2-devel gcc-c++ libjpeg-turbo-devel libjpeg-turbo-static libjpeg-turbo libtiff-devel libtiff libtiff-static libpng libpng-devel libpng-static cmake autoconf.noarch xmlto-tex.noarch xmlto-xhtml.noarch xmlto xmltoman.noarch libcurl-devel curl libcurl ncurses ncurses-devel ncurses-libs ncurses-static pcre-devel pcre-static pcre zlib zlib-devel zlib-static openssl openssl-devel openssl-static perl-Digest-SHA1 perl-Crypt-PasswdMD5.noarch bison-devel bison-runtime bison pth automake.noarch readline readline-devel readline-static uuid uuid-devel expat-devel compat-expat1 expat perl-Makefile-DOM.noarch perl-Makefile-Parser.noarch automake.noarch perl-ExtUtils-MakeMaker tcl tcl-devel tclx tclx-devel tk asciidoc.noarch gettext gettext-devel gettext-libs gtk2 gtk2-devel gtk2-devel-docs gtk2-engines gtk2-engines-devel intltool.noarch libevent libevent-devel libevent-doc.noarch libevent-headers.noarch perl-core perl perl-devel perl-libs perl-Crypt-PasswdMD5.noarch perl-Test-Base.noarch perl-version perl-Test-Exception.noarch perl-Test-Manifest.noarch cyrus-sasl cyrus-sasl-devel cyrus-sasl-lib cyrus-sasl-md5 perl-Authen-SASL.noarch telnet bzip2-devel bzip2-libs bzip2 libedit-devel libedit librsvg2-devel gnome-python2-rsvg librsvg2 poppler-glib poppler-glib-devel libspectre-devel libspectre binutils-devel lrzsz expat-devel expat gettext-devel gettext-libs gettext subversion-perl libtool libtool-ltdl-devel libtool-ltdl libreoffice zlib.i686 ncurses-libs.i686 bzip2-libs.i686 gd.x86_64 freetype-demos.x86_64 freetype-devel.x86_64 freetype.x86_64

configure php
    --prefix=/usr/local/php-5.6.14/ --enable-fpm --with-mysql --with-mysql-sock --with-mysqli --with-pdo-mysql --enable-exif --with-openssl --with-zlib --enable-bcmath --with-bz2 --with-curl --with-gd --with-gettext --enable-mbstring --with-mcrypt --enable-soap --enable-sockets --enable-zip --with-readline --with-gd --with-freetype-dir=/usr/local/freetype

configure nginx
	--prefix=/usr/local/nginx --with-debug --with-http_realip_module --with-http_ssl_module

    user chali;
    group work;
    server{ charset utf-8; }
    fastcgi_read_timeout 300;
	server {
		listen 83;
		root /home/chali/Server/php;
		index index.html index.php;

		location ~ \.php$ {
			fastcgi_pass   127.0.0.1:9000;
			fastcgi_index  index.php;
			fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
			include        fastcgi_params;
		}
	}

	server{
			charset utf-8;
			listen 443 ssl;
			server_name apis.dianhua.cn;
			ssl_certificate /usr/local/nginx/certificates/server.crt;
			ssl_certificate_key /usr/local/nginx/certificates/server.key;
			root /home/chali/Server/yulore;
			index index.html index.php;
			location ~ \.php$ {
				fastcgi_pass   127.0.0.1:9000;
				fastcgi_index  index.php;
				fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
				include        fastcgi_params;
			}
	}
	server {
		location / {
			fastcgi_pass  localhost:9000;
			fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
			fastcgi_param QUERY_STRING    $query_string;
		}

		location ~ \.(gif|jpg|png)$ {
			root /data/images;
		}
	}
    location /abc/ {
        alias /home/html/abc/;
    }
    [HTTP_X_REAL_IP] => 106.37.212.67 真实IP
0.
    git config --global user.name "libin"
    git config --global user.email v_libin02@baidu.com
    git config --global credential.helper cache

    git config --local credential.helper store

    git fetch  服务器   远程分支：本地分支
    git push   服务器   本地分支：远程分支
    git fetch origin master:tmp
    git diff tmp
    git merge tmp

    
1. php-fpm.conf
    user chali
    group chali

2. nginx.conf
    user chali;
	ngixn https
	openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout server.key -out server.crt

	//
	curl error: Peer certificate cannot be authenticated with given CA certificates
	cat server.crt >> /etc/ssl/certs/ca-bundle.trust.crt
	cat server.crt >> /etc/ssl/certs/ca-bundle.crt

3. centos system command
    w   		Show who is logged on and what they are doing.
    uptime  	Tell how long the system has been running.
    top 		display Linux tasks
    vmstat  	reports information about processes, memory, paging, block IO, traps, and cpu activity.
    iostat  	Report Central Processing Unit (CPU) statistics and input/output statistics for devices, partitions and network filesystems (NFS).
    netstat 	Print network connections, routing tables, interface statistics, masquerade connections, and multicast memberships
    ss  		another utility to investigate sockets
    ps  		report a snapshot of the current processes.
    watch   	execute a program periodically, showing output fullscreen
    fdisk   	Partition table manipulator for Linux
    df  		report file system disk space usage
    du  		estimate file space usage
    killall 	kill processes by name
    lsof    	list open files
    uname   	print system information
    find    	search for files in a directory hierarchy
    grep    	print lines matching a pattern
    diff    	compare files line by line
    patch   	apply a diff file to an original
    gawk    	pattern scanning and processing language
    split   	split a file into pieces
    id  		print real and effective user and group IDs
    sort    	sort lines of text files
    uniq    	report or omit repeated lines
    wc  		print newline, word, and byte counts for each file
    md5sum  	compute and check MD5 message digest
    usermod 	modify a user account
    groupmod    modify a group definition on the system
    groupdel    delete a group
    useradd 	create a new user or update default new user information
    userdel 	delete a user account and related files
    source  	Read  and  execute  commands from filename in the current shell environment and return the exit status of the last command executed from filename.
    sed			stream editor for filtering and transforming text
    nl			number lines of files
	service 	network restart
	getconf		-a
	getconf 	LONG_BIT
	bc

    cat /proc/cpuinfo
    cat /etc/group
    cat /etc/passwd
    export PATH=$PATH:/usr/local/mysql/bin
    echo $PATH
    /etc/profile.d 目录下放置bash 文件，在登录时将被执行
    /etc/rc.d/rc.local 文件写入系统启动时要执行的命令
    不能启动：在出现选择菜单时按e,然后选择第二行(kernel *那一行)再按e,在结尾处输入空格1.然后回车,按b引导.

4. /etc/yum.repo/my.repo
    [base]
    name=ISO
    baseurl=file:///media/CentOS_6.5_
    enable=1
    gpgcheck=0
    gpgkey=file:///media/CentOS_6.5_/RPM-GPG-KEY-CentOS-6

5.
    yum groupinstall "development package"
    yum install "@chinese support"

6. php
    preg_match_all('/\w*/u', $str, $rs);
        u utf-8
        i 大小写不敏感
    bool    flock ( resource $handle , int $operation [, int &$wouldblock ] )
        允许执行一个简单的可以在任何平台中使用的读取/写入模型（包括大部分的 Unix 派生版和甚至是 Windows）。

    mixed   parse_url ( string $url [, int $component = -1 ] )
        解析 URL，返回其组成部分

    array   explode ( string $delimiter , string $string [, int $limit ] )
        使用一个字符串分割另一个字符串

    array   list ( mixed $varname [, mixed $... ] )
        像 array() 一样，这不是真正的函数，而是语言结构。list() 用一步操作给一组变量进行赋值。

    string  implode ( string $glue , array $pieces )
        用 glue 将一维数组的值连接为一个字符串。

    string  md5_file ( string $filename [, bool $raw_output = false ] )
        使用 » RSA 数据安全公司的 MD5 报文算法计算 filename 文件的 MD5 散列值并返回。该散列值为 32 字符的十六进制数字。

    array scandir ( string $directory [, int $sorting_order [, resource $context ]] )
         列出指定路径中的文件和目录

    fastcgi_finish_request
        冲刷(flush)所有响应的数据给客户端

7. android google hosts
    203.208.46.146 www.google.com
    74.125.113.121 developer.android.com
    203.208.46.146 dl.google.com
    203.208.46.146 dl-ssl.google.com

8. openssl
    openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout server.key -out server.crt

9. design
    http://cryptojs.altervista.org/js-php-login/

10. mysql
    grant select,insert,update,delete on *.* to chali@"%" Identified by "chali";
    grant select,insert,update,delete on *.* to dianhua@"localhost" Identified by "yulore@2012qwe";
    distinct 在大数据时影响效率

11. 正则
    \b((?!abc)\w)+\b 匹配由字母或数字或下划线或汉字组成的字串，但字串中不能出现abc。
12. android
    platform-tools
    ./adb kill-server
    ./adb start-server
13.
    htmlspecialchars、strip_tags、addslashes

android
001.
    在子线程中创建网络链接、更新UI等。
    添加 jar  包时，复制到 lib就可以了。
14.
    RSA公钥加密算法是1977年由罗纳德·李维斯特（Ron Rivest）、阿迪·萨莫尔（Adi Shamir）和伦纳德·阿德曼（Leonard Adleman）一起提出的。当时他们三人都在麻省理工学院工作。RSA就是他们三人姓氏开头字母拼在一起组成的。
    RSA是目前最有影响力的公钥加密算法，它能够抵抗到目前为止已知的绝大多数密码攻击，已被ISO推荐为公钥数据加密标准。
    RSA算法基于一个十分简单的数论事实：将两个大素数相乘十分容易，但是想要对其乘积进行因式分解却极其困难，因此可以将乘积公开作为加密密钥。
    今天只有短的RSA钥匙才可能被强力方式解破。到2008年为止，世界上还没有任何可靠的攻击RSA算法的方式。只要其钥匙的长度足够长，用RSA加密的信息实际上是不能被解破的。但在分布式计算和量子计算机理论日趋成熟的今天，RSA加密安全性受到了挑战。
15.
    OOA Object-Oriented Analysis（面向对象分析方法）是确定需求或者业务的角度，按照面向对象的思想来分析业务。
    OOD 面向对象设计（Object-Oriented Design，OOD）方法是OO方法中一个中间过渡环节。其主要作用是对OOA分析的结果作进一步的规范化整理，以便能够被OOP直接接受。
    OOP 面向对象编程（Object Oriented Programming，OOP，面向对象程序设计）是一种计算机编程架构。OOP 的一条基本原则是计算机程序是由单个能够起到子程序作用的单元或对象组合而成。

16.
    Yii 关闭自动装载，引入其他自动装载
    Yii::$enableIncludePath = false;
    Yii::import('application.lib.excel.PHPExcel', 1);

    Yii::setPathOfAlias('lib',      WEB_ROOT_PATH . DS . 'protected' . DS . 'lib');
    'smarty'=>array('class'=>'lib.CSmarty','templatePath' => WEB_TEMPLATE_PATH,)

17.
    Redis 是一款依据BSD开源协议发行的高性能Key-Value存储系统（cache and store）。它通常被称为数据结构服务器，因为值（value）可以是 字符串(String), 哈希(Map), 列表(list), 集合(sets) 和 有序集合(sorted sets)等类型。
    常用操作
    SET key value               设置一个key的value值
    GET key                     获取key的值
    SETEX key seconds value     设置key-value并设置过期时间（单位：秒）
    FLUSHDB                     清空当前的数据库
    TTL key                     获取key的有效时间（单位：秒）
18.
    CREATE
        TRIGGER trigger_name
        trigger_time trigger_event
        ON tbl_name FOR EACH ROW
        trigger_body

    trigger_time: { BEFORE | AFTER }
    trigger_event: { INSERT | UPDATE | DELETE }

19.
    key, index, unique key, primary key,
20.
    python
        os
            os.name                             #输出字符串指示正在使用的平台
            os.mkdir() os.rmdir()               #创建目录，删除目录
            os.getcwd()                         #函数得到当前工作目录，即当前Python脚本工作的目录路径。
            os.listdir()                        #返回指定目录下的所有文件和目录名。
            os.remove()                         #删除一个文件。
            os.system()                         #运行shell命令。
            os.sep                              #可以取代操作系统特定的路径分割符。
            os.linesep                          #字符串给出当前平台使用的行终止符
            os.path.split()                     #函数返回一个路径的目录名和文件名
            os.path.isfile()和os.path.isdir()   #函数分别检验给出的路径是一个文件还是目录。
            os.path.exists()                    #函数用来检验给出的路径是否真地存在
            os.path.abspath(name)               #获得绝对路径
            os.path.normpath(path)              #规范path字符串形式
            os.path.getsize(name)               #获得文件大小
            os.path.splitext()                  #分离文件名与扩展名
            os.path.basename()                  #返回文件名
            os.path.dirname()                   #返回文件路径
        文件操作
            fp = open("test.txt",w)
            fp.read([size])                     #size为读取的长度，以byte为单位
            fp.readline([size])                 #读一行，如果定义了size，有可能返回的只是一行的一部分
            fp.readlines([size])                #把文件每一行作为一个list的一个成员，并返回这个list。其实它的内部是通过循环调用readline()来实现的。如果提供size参数，size是表示读取内容的总长，也就是说可能只读到文件的一部分。
            fp.write(str)                       #把str写到文件中，write()并不会在str后加上一个换行符
            fp.writelines(seq)                  #把seq的内容全部写到文件中(多行一次性写入)。这个函数也只是忠实地写入，不会在每行后面加上任何东西。
            fp.close()                          #关闭文件。python会在一个文件不用后自动关闭文件，不过这一功能没有保证，最好还是养成自己关闭的习惯。  如果一个文件在关闭后还对其进行操作会产生ValueError
            fp.flush()                          #把缓冲区的内容写入硬盘
            fp.fileno()                         #返回一个长整型的”文件标签“
            fp.isatty()                         #文件是否是一个终端设备文件（unix系统中的）
            fp.tell()                           #返回文件操作标记的当前位置，以文件的开头为原点
            fp.next()                           #返回下一行，并将文件操作标记位移到下一行。把一个file用于for … in file这样的语句时，就是调用next()函数来实现遍历的。
            fp.seek(offset[,whence])            #将文件打操作标记移到offset的位置。这个offset一般是相对于文件的开头来计算的，一般为正数。但如果提供了whence参数就不一定了，whence可以为0表示从头开始计算，1表示以当前位置为原点计算。2表示以文件末尾为原点进行计算。需要注意，如果文件以a或a+的模式打开，每次进行写操作时，文件操作标记会自动返回到文件末尾。
            fp.truncate([size])                 #把文件裁成规定的大小，默认的是裁到当前文件操作标记的位置。如果size比文件的大小还要大，依据系统的不同可能是不改变文件，也可能是用0把文件补到相应的大小，也可能是以一些随机的内容加上去。

21
	非对称加密 (asymmetric cryptography) 公开密钥加密 (public-key cryptography)
	对称密钥加密（英语：Symmetric-key algorithm）又称为对称加密、私钥加密、共享密钥加密，是密码学中的一类加密算法。这类算法在加密和解密时使用相同的密钥，或是使用两个可以简单地相互推算的密钥。

22
	网络抓包 tcpdump
	http://www.w3cschool.cc
24
	散列函数的性质
		所有散列函数都有如下一个基本特性：如果两个散列值是不相同的（根据同一函数），那么这两个散列值的原始输入也是不相同的。
		这个特性是散列函数具有确定性的结果，具有这种性质的散列函数称为单向散列函数。但另一方面，散列函数的输入和输出不是唯一对应关系的，如果两个散列值相同，两个输入值很可能是相同的。但也可能不同，这种情况称为“哈希碰撞”，这通常是两个不同长度的输入值，刻意计算出相同的输出值。输入一些数据计算出散列值，然后部分改变输入值，一个具有强混淆特性的散列函数会产生一个完全不同的散列值。
		由于散列函数的应用的多样性，它们经常是专为某一应用而设计的。例如，加密散列函数假设存在一个要找到具有相同散列值的原始输入的敌人。一个设计优秀的加密散列函数是一个“单向”操作：对于给定的散列值，没有实用的方法可以计算出一个原始输入，也就是说很难伪造。为加密散列为目的设计的函数，如SHA-2，被广泛的用作检验散列函数。这样软件下载的时候，就会对照验证代码之后才下载正确的文件部分。此代码有可能因为环境因素的变化，如机器配置或者IP地址的改变而有变动。以保证源文件的安全性。

mysql
	show processlist
	explain
	show variables like '%log%';
	set global slow_query_log = on
	where b.id is NULL				NULL值判断

bash
	fgrep index.php/ js -R | while read line; do sed -i "s/index.php\//index.php/g" ${line%:*}; done;

php
	php-fpm中启用慢日志配置以检测执行较慢的PHP脚本
术语
	表A和每一行与表B的每一行合部可能的组合的联结操作叫做生成笛卡儿集
centos 时区设置
	cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

无线
	netsh wlan set hostednetwork mode=allow ssid=devbinli key=devbinli
	netsh wlan start hostednetwork
mysql
	SHOW [GLOBAL | SESSION] VARIABLES [LIKE 'pattern' | WHERE expr]
	show variables like '%log%';
	set global general_log=on;
	set sql_safe_updates = 1;
curl
	-d "fuck=post&fuck=name"
	-b "fuck=cookie; name=fuck;"
	-c cookie.txt 把cookie写入cookie.txt
	-b cookie.txt 把cookie.txt里的当成cookie上传
	curl -k -d "name=chali" "https://apis.dianhua.cn?name=peipei" -b "love=peipei; age=32"
nginx
	./configure	--with-debug
	error_log /path/to/log debug;
english
	bytes kilobytes megabytes
HTTP状态码
	消息（1字头）
		100 Continue
		101 Switching Protocols
		102 Processing
	成功（2字头）
		200 OK
		201 Created
		202 Accepted
		203 Non-Authoritative Information
		204 No Content
		205 Reset Content
		206 Partial Content
		207 Multi-Status
	重定向（3字头）
		300 Multiple Choices
		301 Moved Permanently
		302 Move temporarily
		303 See Other
		304 Not Modified
		305 Use Proxy
		306 Switch Proxy
		307 Temporary Redirect
	请求错误（4字头）
		400 Bad Request
		401 Unauthorized
		402 Payment Required
		403 Forbidden
		404 Not Found
		405 Method Not Allowed
		406 Not Acceptable
		407 Proxy Authentication Required
		408 Request Timeout
		409 Conflict
		410 Gone
		411 Length Required
		412 Precondition Failed
		413 Request Entity Too Large
		414 Request-URI Too Long
		415 Unsupported Media Type
		416 Requested Range Not Satisfiable
		417 Expectation Failed
		421 There are too many connections from your internet address
		422 Unprocessable Entity
		423 Locked
		424 Failed Dependency
		425 Unordered Collection
		426 Upgrade Required
		449 Retry With
	服务器错误（5字头）
		500 Internal Server Error
		501 Not Implemented
		502 Bad Gateway
		503 Service Unavailable
		504 Gateway Timeout
		505 HTTP Version Not Supported
		506 Variant Also Negotiates
		507 Insufficient Storage
		509 Bandwidth Limit Exceeded
		510 Not Extended
		600 Unparseable Response Headers


memcached
	telnet localhost 11211
	stats items
	stats cachedump 1 0		// 显示 item ID为1的 所有key


libmemcached
	./configure --prefix=/usr/local/libmemcached --with-memcached=/usr/local/memcached/bin --with-mysql=/usr/local/mysql/bin

memcached
	总结：php调用memcache，添加多个server，会随机写入某个服务器，调用时也会按规则读取，未发现读取不正确的现象，结论：memcached是采用的分布式，但是只保留一份到某一台服务器上。

adb
	adb start-server
	adb shell
	adb logcat
	adb logcat | findstr apis
	adb shell
		rm xxx
		rm -r xxx
		rmdir ...
ntp
	ntpdate -u 202.112.10.36
mail
	mail -s 'my jpg' -a libin.JPG bin.li@yulore.com 'test'
crontab
	f1 f2 f3 f4 f5 program

    其中 f1 是表示分钟，f2 表示小时，f3 表示一个月份中的第几日，f4 表示月份，f5 表示一个星期中的第几天。program 表示要执行的程序。
    当 f1 为 * 时表示每分钟都要执行 program，f2 为 * 时表示每小时都要执行程序，其馀类推
    当 f1 为 a-b 时表示从第 a 分钟到第 b 分钟这段时间内要执行，f2 为 a-b 时表示从第 a 到第 b 小时都要执行，其馀类推
    当 f1 为 */n 时表示每 n 分钟个时间间隔执行一次，f2 为 */n 表示每 n 小时个时间间隔执行一次，其馀类推
    当 f1 为 a,b,c,... 时表示第 a,b,c,... 分钟要执行，f2 为 a,b,c,... 时表示第 a,b,c...个小时要执行，其馀类推

	使用者也可以将所有的设定先存放在文件中，用 crontab file 的方式来设定时程表。
简写
	express exp ex
	company co
外网IP查询
	curl ip.cn
SAPI
    SAPI:Server Application Programming Interface
ThinkPHP
    http://localhost/?m=home&c=index&a=hello&name=thinkphp
goto
    goto 操作符可以用来跳转到程序中的另一位置。该目标位置可以用目标名称加上冒号来标记，而跳转指令是 goto 之后接上目标位置的标记。PHP 中的 goto 有一定限制，目标位置只能位于同一个文件和作用域，也就是说无法跳出一个函数或类方法，也无法跳入到另一个函数。也无法跳入到任何循环或者 switch 结构中。可以跳出循环或者 switch，通常的用法是用 goto 代替多层的 break。
html
    table style
        style="border-collapse:collapse;min-width:800px;margin-left:5px;" borderColor="#000000" cellPadding="1" align="center" border="1"
nginx
    [SCRIPT_FILENAME] => /home/chali/Server/82/lucy/chali.php
    [SCRIPT_NAME] => /lucy/chali.php
    [DOCUMENT_URI] => /lucy/chali.php
    [DOCUMENT_ROOT] => /home/chali/Server/82
    [SERVER_PROTOCOL] => HTTP/1.1
    [SERVER_SOFTWARE] => nginx/1.9.2
    [REDIRECT_STATUS] => 200
mysql_log
    set global general_log = ON;
    set global slow_query_log = ON;
    
html status
    header("HTTP/1.0 404 Not Found");
    var_dump(http_response_code()); // int(200)
    http_response_code(404);
    var_dump(http_response_code()); // int(404)

    // We'll be outputting a PDF
    header('Content-type: application/pdf');
    // It will be called downloaded.pdf
    header('Content-Disposition: attachment; filename="downloaded.pdf"');
    // The PDF source is in original.pdf
    readfile('original.pdf');
php
    var_dump(null==0); true;
mysql
    lock table
    A session can acquire or release locks only for itself. 
    Locks may be used to emulate transactions or to get more speed when updating tables.
    UNLOCK TABLES explicitly releases any table locks held by the current session. LOCK TABLES implicitly releases any table locks held by the current session before acquiring new locks.
    Another use for UNLOCK TABLES is to release the global read lock acquired with the FLUSH TABLES WITH READ LOCK statement, which enables you to lock all tables in all databases.

    FLUSH TABLES WITH READ LOCK;  unlock tables;
    If you lock a table explicitly with LOCK TABLES, any tables used in triggers are also locked implicitly, 
    A table lock only protects against inappropriate reads or writes by other sessions. A session holding a WRITE lock can perform table-level operations such as DROP TABLE or TRUNCATE TABLE. For sessions holding a READ lock, DROP TABLE and TRUNCATE TABLE operations are not permitted.
    The LOW_PRIORITY modifier has no effect. In previous versions of MySQL, it affected locking behavior, but this is no longer true. As of MySQL 5.6.5, it is deprecated and its use produces a warning. Use WRITE without LOW_PRIORITY instead.
    You cannot refer to a locked table multiple times in a single query using the same name. Use aliases instead, and obtain a separate lock for the table and each alias:
mysql
    transaction
        START TRANSACTION is standard SQL syntax;
        SELECT ... FOR UPDATE | LOCK IN SHARE MODE;
    acount management;
        set password = password('root');
        SET PASSWORD FOR 'jeffrey'@'%' = PASSWORD('cleartext password');
        SET PASSWORD FOR 'jeffrey'@'localhost' = PASSWORD('cleartext password');
        SET PASSWORD FOR 'bob'@'%.example.org' = PASSWORD('cleartext password');
php
    参数类型指定
        declare(strict_types=1);
        function sum(int $a, int $b) {
            return $a + $b;
        }
        
    匿名函数（Anonymous functions），也叫闭包函数（closures）
        $example = function ($arg) use ($message) {
            var_dump($arg . ' ' . $message);
        };
    
    比较
        var_dump(10=="10asdf");
        true;
git
    git blame env.php
php
    先检查所有代码错误，然后执行
设计
    https://chrome.google.com/webstore/category/extensions?hl=zh-CN
mysql 
    default value for datetime;
    CREATE TABLE t1 (
      ts TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
      dt DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
    );
mysql 
    data type alter table svc_mark add column update_time datetime not null default current_timestamp on update current_timestamp;
    bit (length)
mysql
    mysql> select 'a'='a  ';
    +-----------+
    | 'a'='a  ' |
    +-----------+
    |         1 |
    +-----------+
    1 row in set (0.00 sec)
     
    mysql> select 'a'like'a  ';
    +--------------+
    | 'a'like'a  ' |
    +--------------+
    |            0 |
    +--------------+
    1 row in set (0.04 sec)
mysql
    default current_timestamp
        alter table svc_mark add column update_time datetime not null default current_timestamp on update current_timestamp;
passthru — 执行外部程序并且显示原始输出
    同 exec() 函数类似， passthru() 函数 也是用来执行外部命令（command）的。 当所执行的 Unix 命令输出二进制数据， 并且需要直接传送到浏览器的时候， 需要用此函数来替代 exec() 或 system() 函数。 常用来执行诸如 pbmplus 之类的可以直接输出图像流的命令。 通过设置 Content-type 为 image/gif， 然后调用 pbmplus 程序输出 gif 文件， 就可以从 PHP 脚本中直接输出图像到浏览器。


fpassthru
    // 以二进制格式打开文件
    $name = './img/ok.png';
    $fp = fopen($name, 'rb');
    // 发送合适的报头
    header("Content-Type: image/png");
    header("Content-Length: " . filesize($name));
    // 发送图片并终止脚本
    fpassthru($fp);
    exit;
git
    $ git diff --stat other_branch //仅文件名
    git diff --stat master Api/Service/Kuaidi/
php
    str_replace(PHP_EOL,'',$xml->asXml());
chrome
    chrome://net-internals/#proxy
adb
    adb shell
    adb pull /sdcard1/s81-muddor.tar.gz /root/
    adb push /root/fuck.txt /sdcard1/fuck.txt
php
    php > var_dump(true && ($a=0));
    bool(false)
    php > var_dump(true && ($a=1));
    bool(true)
    php > var_dump(($a=1));
    int(1)
    php > var_dump(($a=0));
    int(0)
    php > var_dump((((($a=0)))));
    int(0)
    php > var_dump($a=1&&2);
    bool(true)
    php > var_dump($a=22&&2);
    bool(true)
    php > var_dump($a=22&&0);
    bool(false)
    php >
linux
    rsync -av src dest
ssh
    chmod 700 .ssh/
    chmod 600 .ssh/*
php 异常
    /* same action using exceptions ... */
    try {
    
        if ( empty( $var1 ) ) throw new NotEmptyException();
        if ( empty( $var2 ) ) throw new NotEmptyException();
        if ( ! preg_match() ) throw new InvalidInputException();
    
        $model->write();
        $template->render( 'success' );
      
    } catch ( NotEmptyException $e ) {
    
      $template->render( 'error_empty' );
    
    } catch ( InvalidInputException $e ) {
    
      $template->render( 'error_preg' );
    
    }
xp
	QJ68H-G7T8R-WFR77-D8X8Y-VJ398 
    
统计单词出现次数
	grep -o world a.txt | wc -l
mysql dump table
	mysqldump -uroot -p -hlocalhost middleware shop > shop.sql
	select * from students where Age > 30 into outfile '/tmp/stud.txt' 
	load data infile '/tmp/stud.txt' into table students;

php
    Y 	4 位数字完整表示的年份 	            例如：1999 或 2003
    m 	数字表示的月份，有前导零 	        01 到 12
    d 	月份中的第几天，有前导零的 2 位数字 	01 到 31
    H 	小时，24 小时格式，有前导零 	        00 到 23
    i 	有前导零的分钟数 	                00 到 59
    s 	秒数，有前导零 	                00 到 59

crontab
    *     *     *     *     *        command to be executed
    -     -     -     -     -
    |     |     |     |     |
    |     |     |     |     +----- day of week (0 - 6) (Sunday=0)
    |     |     |     +------- month (1 - 12)
    |     |     +--------- day of month (1 - 31)
    |     +----------- hour (0 - 23)
    +------------- min (0 - 59)
